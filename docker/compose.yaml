services:
  mppi_jazzy:
    image: "jazzy_image" # name of the image that will be created
    user: ubuntu # run the container as the ubuntu user
    working_dir: /home/ubuntu/Agri-Modular-Robot-Simulator #
    stdin_open: true # keep stdin open
    privileged: true 
    environment:
      - DISPLAY
      - XAUTHORITY=/tmp/.Xauthority
      - NVIDIA_DRIVER_CAPABILITIES=all
      - __NV_PRIME_RENDER_OFFLOAD=1
      - __GLX_VENDOR_LIBRARY_NAME=nvidia
      - NVIDIA_VISIBLE_DEVICES=all
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    volumes:
      - ../src:/home/ubuntu/Agri-Modular-Robot-Simulator/src # mount the source code directory
      - ../lemon_field_occ_grid.pgm:/home/ubuntu/Agri-Modular-Robot-Simulator/lemon_field_occ_grid.pgm # mount the occupancy grid file
      - ../lemon_field_occ_grid.yaml:/home/ubuntu/Agri-Modular-Robot-Simulator/lemon_field_occ_grid.yaml # mount the occupancy grid file
      - ../Makefile:/home/ubuntu/Agri-Modular-Robot-Simulator/Makefile # mount the Makefile
      - ~/.Xauthority:/root/.Xauthority # share the Xauthority file with the host
      - /tmp/.X11-unix:/tmp/.X11-unix:rw # share the X11 socket with the host
      - /dev:/dev # share the devices with the host
      - /dev/shm:/dev/shm # share the shared memory with the host
    # share the network with the host 
    pid: host
    network_mode: host
    ipc: host
    # share the X11 socket with the host to display the GUI
    runtime: nvidia
    container_name: mppi_container_jazzy # name of the container that will be created
    restart: no # do not restart the container automatically
    entrypoint: ["bash", "-c", "sudo chmod 777 -R /home/ubuntu && source /opt/ros/jazzy/setup.bash && /bin/bash"] # command to run when the container starts
